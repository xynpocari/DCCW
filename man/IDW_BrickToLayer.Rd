% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/IDW_interpolate_hotspots.R
\name{IDW_BrickToLayer}
\alias{IDW_BrickToLayer}
\title{Convert IDW brick to layer}
\usage{
IDW_BrickToLayer(IDW_brick)
}
\arguments{
\item{IDW_brick}{RasterBrick, output from calling \code{IDW_interpolate_hotspots(format = 'Raster')}.}
}
\value{
RasterLayer
}
\description{
Turn IDW interpolated estimated area of burn RasterBricks into a single RasterLayer.
}
\details{
This function turns the multilayer RasterBrick from \code{IDW_interpolate_hotspots()} into a single RasterLayer.
Whereas the raster output from \code{IDW_interpolate_hotspots()} stores epoch information as the Z variable and represents area burned using 0s and 1s,
the output of \code{IDW_StackToLayer()} creates a single RasterLayer where the value of each cell is the estimated epoch of when the cell burned.
}
\examples{
\dontrun{
library(sf)
library(raster)
library(lubridate)
library(dplyr)
library(tibble)
library(lutz)
library(gstat)
library(units)

# download 2019 NBAC to tempfile
nbac_temp <- tempfile(fileext = '.zip')
download.file(destfile = nbac_temp,
              url = 'https://cwfis.cfs.nrcan.gc.ca/downloads/nbac/nbac_2019_r9_20200703.zip')

nbac_files <- unzip(nbac_temp, list = T)
nbac <- unzip(zipfile = nbac_temp, files = nbac_files$Name[1:11], exdir = gsub('.zip','',nbac_temp))
nbac <- st_read(dsn = nbac[7]) # import nbac to R as sf polygons

# search for the 2019 McMillan wildfire, CFS ID SWF-049-2019
fire <- searchNBAC_by_alias(nbac_file = nbac, alias = 'SWF-049-2019')

# simplify NBAC to make it easier to work with
fire <- simplify_NBAC(fire)
plot(fire[,1]) # view the McMillan fire

# grab VIIRS hotspots within the fire perimeter + 2 km buffer
viirs <- VIIRS_hotspots_grab(reference_poly = fire,
                             start_date = '2019-05-18',
                             end_date = '2019-06-10',
                             buff_width = 2000)
plot(viirs[,'acq_date']) # view hotspots

# grab fbp fuels grid based on fire perimeter + 2 km buffer
fbp_fuel <- fbp_fuel_grab(reference_poly = fire,
                          match_crs = TRUE,
                          buff_width = 2000,
                          fbp_grid = NULL)
plot(fbp_fuel) # view fuels grid, which will be our reference grid

# interpolate hotspots to fuels grid
# NOTE: the first time this is run, errors may occur, but the task actually was successful.
IDW <- IDW_interpolate_hotspots(hotspots = viirs,
                               fire_perimeter = fire,
                               reference_grid = fbp_fuel,
                               interval = 'Daily',
                               format = 'Raster',
                               cumulative = FALSE,
                               output_directory = NULL,
                               filename_prefix = NULL)

plot(IDW[[1:4]]) # non-cumulative estimated daily area of burn

# now convert the RasterBrick to a single RasterLayer,
# where pixel values represented estimated time of burn.
IDW_single_layer <- IDW_BrickToLayer(IDW_brick =  IDW)

# pixel values represent estimated area burned (in UNIX epoch, seconds since 1970-01-01 00:00:00)
plot(IDW_single_layer)

}
}
